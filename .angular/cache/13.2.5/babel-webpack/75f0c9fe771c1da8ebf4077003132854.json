{"ast":null,"code":"import { timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/auth0-angular\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction ErrorComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"h1\");\n    i0.ɵɵtext(2, \"An error was returned from Auth0\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Something went wrong when trying to authorize your application. Please inspect the error below and ensure \");\n    i0.ɵɵelementStart(5, \"code\");\n    i0.ɵɵtext(6, \"auth_config.json\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" is configured correctly.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 2);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const error_r1 = ctx.ngIf;\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", error_r1.error_description, \" \");\n  }\n}\n\nexport let ErrorComponent = /*#__PURE__*/(() => {\n  class ErrorComponent {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n      this.error$ = this.auth.error$;\n    }\n\n    ngOnInit() {\n      timer(0).pipe(takeUntil(this.error$)).subscribe(() => {\n        this.router.navigateByUrl('/');\n      });\n    }\n\n  }\n\n  ErrorComponent.ɵfac = function ErrorComponent_Factory(t) {\n    return new (t || ErrorComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ErrorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ErrorComponent,\n    selectors: [[\"app-error\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[1, \"container\", \"mt-5\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function ErrorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ErrorComponent_ng_container_1_Template, 10, 1, \"ng-container\", 1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.error$));\n      }\n    },\n    directives: [i3.NgIf],\n    pipes: [i3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ErrorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}